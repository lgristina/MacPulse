name: MacPulse - Build and Analyze

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and analyze MacPulse project
    runs-on: macos-14 # macos-14 supports Xcode 16.x as of late 2024/early 2025
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Xcode Version to 16.2
        run: |
          sudo xcode-select -s /Applications/Xcode_16.2.app
          xcodebuild -version # Verify the version

      - name: Install xcpretty (for better logs)
        run: gem install xcpretty

      - name: Find Project File
        id: find_project
        run: |
          project_file=$(find . -type d -name "MacPulse.xcodeproj" | head -n 1)
          if [ -z "$project_file" ]; then
            echo "No Xcode project file found!" && exit 1
          fi
          if [[ "$project_file" == *.xcworkspace ]]; then
            filetype_parameter="workspace"
          elif [[ "$project_file" == *.xcodeproj ]]; then
            filetype_parameter="project"
          else
            echo "Invalid file type!" && exit 1
          fi
          echo "filetype_parameter=$filetype_parameter" >> $GITHUB_ENV
          echo "project_file=$project_file" >> $GITHUB_ENV

      - name: Get the Default Scheme
        id: get_scheme
        run: |
          scheme_list=$(xcodebuild -"$filetype_parameter" "$project_file" -list -json | tr -d "\n")
          default=$(echo "$scheme_list" | jq -r '.project.targets[0]')
          if [ -z "$default" ]; then
            echo "Could not determine default scheme!" && exit 1
          fi
          echo "Using default scheme: $default"
          echo "$default" > "$GITHUB_WORKSPACE/default"

      - name: Build and Analyze
        run: |
          scheme=$(cat "$GITHUB_WORKSPACE/default")
          if [[ "$filetype_parameter" == "workspace" ]]; then
            xcodebuild clean build analyze -workspace "$project_file" -scheme "$scheme" | xcpretty
          else
            xcodebuild clean build analyze -project "$project_file" -scheme "$scheme" | xcpretty
          fi
          exit_code=${PIPESTATUS[0]}
          if [ $exit_code -ne 0 ]; then
            echo "xcodebuild failed with exit code $exit_code" && exit $exit_code
          fi
